{"version":3,"sources":["server/middleware/react-redux/src/index.js"],"names":["React","require","createStore","combineReducers","Provider","renderToString","renderToStaticMarkup","StaticRouter","Helmet","graphql","buildSchema","createPromiseCollector","PromiseProvider","getInitScripts","absolute","reactReduxMiddleware","ctx","next","config","method","request","response","body","undefined","routes","layout","reducers","graphqlSchema","graphqlRoot","url","default","Layout","Routes","reducer","promise","store","html","renderRoute","root","__html","helmet","renderStatic","scripts","getState","props","htmlAttributes","toComponent","bodyAttributes","title","meta","link","renderLayout","reactReduxMiddlewareInit","context","router","renderReactComponents","render","promises","length","Promise","all","module","exports"],"mappings":"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","file":"unknown","sourcesContent":["const React = require('react')\nconst { createStore, combineReducers } = require('redux')\nconst { Provider } = require('react-redux')\nconst { renderToString, renderToStaticMarkup } = require('react-dom/server')\nconst { StaticRouter } = require('react-router-dom')\nconst { Helmet } = require('react-helmet')\nconst { graphql, buildSchema } = require('graphql')\nconst createPromiseCollector = require('../../../../utility/promise/collector')\nconst PromiseProvider = require('../../../../react/component/provider/promise')\nconst getInitScripts = require('../../../../scripts/frontend')\nconst { absolute } = require('../../../../utility/path')\n\nconst reactReduxMiddleware = async (ctx, next, config) => {\n    const { method, request, response } = ctx\n    const { body } = response\n    if (body !== undefined) {\n        return await next()\n    }\n\n    const { routes, layout, reducers, graphqlSchema, graphqlRoot } = config\n    const { url } = request\n    const { default: Layout } = require(absolute(layout))\n    const { default: Routes } = require(absolute(routes))\n    const { default: reducer } = require(absolute(reducers))\n    const promise = createPromiseCollector()\n    const store = createStore(combineReducers(reducer))\n    const html = await renderRoute({ url, Routes, store, promise })\n    const root = <ethical-root dangerouslySetInnerHTML={ { __html: html } } />\n    const helmet = Helmet.renderStatic()\n    const scripts = getInitScripts(store.getState())\n    const props = {\n        html: helmet.htmlAttributes.toComponent(),\n        body: helmet.bodyAttributes.toComponent(),\n        title: helmet.title.toComponent(),\n        meta: helmet.meta.toComponent(),\n        link: helmet.link.toComponent(),\n        scripts,\n        root\n    }\n\n    response.body = renderLayout(Layout, props)\n\n    await next()\n}\n\nconst reactReduxMiddlewareInit = (config) => (\n    async (ctx, next) => await reactReduxMiddleware(ctx, next, config)\n)\n\nconst renderRoute = async (context) => {\n    const router = {}\n    const html = await renderReactComponents({ ...context, router })\n    const { url } = router\n    if (url) {\n        return renderRoute({ ...context, url })\n    }\n    return html\n}\n\nconst renderReactComponents = async (context) => {\n\n    const { url, router, Routes, store, promise } = context\n    const render = () => renderToString(\n        <PromiseProvider promise={promise}>\n            <Provider store={store}>\n                <StaticRouter context={router} location={url}>\n                    {Routes}\n                </StaticRouter>\n            </Provider>\n        </PromiseProvider>\n    )\n\n    const html = render()\n    const promises = promise()\n    const { length } = promises\n    if (length === 0) {\n        return html\n    }\n\n    await Promise.all(promises)\n    return render()\n}\n\nconst renderLayout = (Layout, props) => renderToStaticMarkup(\n    <Layout { ...{ ...props} } />\n)\n\nmodule.exports = reactReduxMiddlewareInit\n"]}